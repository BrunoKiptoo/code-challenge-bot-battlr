{"ast":null,"code":"var _jsxFileName = \"/root/code-challenge-bot-battlr/code-challenge-bot-battlr/src/components/BotsPage.js\";\n// import React from \"react\";\n// import YourBotArmy from \"./YourBotArmy\";\n// import BotCollection from \"./BotCollection\";\n\n// function BotsPage() {\n//   //start here with your code for step one and ensure functionality end and continue\n\n//   return (\n//     <div>\n//       <YourBotArmy />\n//       <BotCollection />\n//     </div>\n//   )\n// }\n\n// export default BotsPage;\n\nimport React from \"react\";\nimport BotsCollection from \"./BotCollection\";\nimport YourBotArmy from './YourBotArmy';\nimport BotSpecs from '../components/BotSpecs';\nimport BotSearch from '../components/BotSearch';\nimport Filter from '../components/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass BotsPage extends React.Component {\n  constructor() {\n    super();\n    this.setBots = bots => {\n      return bots.map(bot => {\n        bot.owned = false;\n        return bot;\n      });\n    };\n    this.clickBot = bot => {\n      this.setState({\n        selectBot: bot\n      });\n    };\n    this.addBot = selectBot => {\n      let x = this.state.allBots.map(bot => {\n        if (bot.id === selectBot.id) {\n          bot.owned = !bot.owned;\n          return bot;\n        } else {\n          return bot;\n        }\n      });\n      this.setState({\n        allBots: x\n      });\n    };\n    this.filterFreeBots = () => {\n      let freeBots = [];\n      this.state.allBots.map(bot => {\n        if (bot.owned === false) {\n          freeBots.push(bot);\n        }\n      });\n      if (this.state.filter !== 'All') {\n        freeBots = freeBots.filter(bot => bot.bot_class == this.state.filter);\n      }\n      if (this.state.query) {\n        freeBots = freeBots.filter(bot => bot.name.toLowerCase().includes(this.state.query.toLowerCase()));\n      }\n      return freeBots;\n    };\n    this.filterOwnedBots = () => {\n      let ownedBots = [];\n      this.state.allBots.map(bot => {\n        if (bot.owned === true) {\n          ownedBots.push(bot);\n        }\n      });\n      let filtered = ownedBots.filter(bot => {\n        return bot.name.toLowerCase().includes(this.state.query.toLowerCase());\n      });\n      return filtered;\n    };\n    this.handleClear = () => {\n      this.setState({\n        query: ''\n      });\n    };\n    this.handleChange = query => {\n      this.setState({\n        query: query\n      });\n    };\n    this.clearSpec = () => {\n      this.setState({\n        selectBot: undefined\n      });\n    };\n    this.filterChange = value => {\n      this.setState({\n        filter: value\n      });\n    };\n    this.state = {\n      allBots: [],\n      selectBot: undefined,\n      query: '',\n      filter: 'All'\n    };\n  }\n  componentDidMount() {\n    fetch('https://bot-battler-api.herokuapp.com/api/v1/bots').then(res => res.json()).then(bots => this.setBots(bots)).then(bots => this.setState({\n      allBots: bots\n    }));\n  }\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BotSearch, {\n        handleClear: this.handleClear,\n        handleChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filterChange: this.filterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n        bots: this.filterOwnedBots(),\n        addBot: this.clickBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), this.state.selectBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n        bot: this.state.selectBot,\n        clearSpec: this.clearSpec,\n        addBot: this.addBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(BotsCollection, {\n        bots: this.filterFreeBots(),\n        addBot: this.clickBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default BotsPage;","map":{"version":3,"names":["React","BotsCollection","YourBotArmy","BotSpecs","BotSearch","Filter","BotsPage","Component","constructor","setBots","bots","map","bot","owned","clickBot","setState","selectBot","addBot","x","state","allBots","id","filterFreeBots","freeBots","push","filter","bot_class","query","name","toLowerCase","includes","filterOwnedBots","ownedBots","filtered","handleClear","handleChange","clearSpec","undefined","filterChange","value","componentDidMount","fetch","then","res","json","render","console","log"],"sources":["/root/code-challenge-bot-battlr/code-challenge-bot-battlr/src/components/BotsPage.js"],"sourcesContent":["// import React from \"react\";\n// import YourBotArmy from \"./YourBotArmy\";\n// import BotCollection from \"./BotCollection\";\n\n// function BotsPage() {\n//   //start here with your code for step one and ensure functionality end and continue\n\n//   return (\n//     <div>\n//       <YourBotArmy />\n//       <BotCollection />\n//     </div>\n//   )\n// }\n\n// export default BotsPage;\n\n\nimport React from \"react\";\nimport BotsCollection from \"./BotCollection\"\nimport YourBotArmy from './YourBotArmy'\nimport BotSpecs from '../components/BotSpecs'\nimport BotSearch from '../components/BotSearch'\nimport Filter from '../components/Filter'\n\nclass BotsPage extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      allBots: [],\n      selectBot: undefined,\n      query: '',\n      filter: 'All'\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://bot-battler-api.herokuapp.com/api/v1/bots')\n    .then(res => res.json())\n    .then(bots => this.setBots(bots))\n      .then(bots => this.setState({\n        allBots: bots\n      }))\n  }\n\n  setBots = (bots) => {\n    return bots.map(bot => {\n      bot.owned = false\n      return bot\n    })\n  }\n\n  clickBot = (bot) => {\n    this.setState({\n      selectBot: bot\n    })\n  }\n\n  addBot = (selectBot) => {\n    let x = this.state.allBots.map(bot => {\n      if(bot.id === selectBot.id){\n        bot.owned = !bot.owned\n        return bot\n      }else {\n        return bot\n      }\n    })\n    this.setState({\n      allBots: x\n    })\n  }\n\n  filterFreeBots = () => {\n    let freeBots = []\n    this.state.allBots.map(bot => {\n      if(bot.owned === false){\n        freeBots.push(bot)\n      }\n    })\n    if(this.state.filter !== 'All'){\n      freeBots = freeBots.filter(bot => \n        bot.bot_class == this.state.filter\n      )\n    }\n    if(this.state.query){\n      freeBots = freeBots.filter(bot=> \n        bot.name.toLowerCase().includes(this.state.query.toLowerCase())\n      )\n    }\n    return freeBots\n  }\n\n  filterOwnedBots = () => {\n    let ownedBots = []\n    this.state.allBots.map(bot => {\n      if(bot.owned === true){\n        ownedBots.push(bot)\n      }\n    })\n    let filtered = ownedBots.filter(bot=> {\n      return bot.name.toLowerCase().includes(this.state.query.toLowerCase())\n    })\n    return filtered\n  }\n\n  handleClear = () => {\n    this.setState({\n      query: ''\n    })\n  }\n\n  handleChange = (query) => {\n    this.setState({\n      query: query\n    })\n  }\n\n  clearSpec = () => {\n    this.setState({\n      selectBot: undefined\n    })\n  }\n\n  filterChange = (value) => {\n    this.setState({\n      filter: value\n    })\n  }\n\n  \n  render() {\n    console.log(this.state)\n    return (\n      <div>\n        <BotSearch handleClear={this.handleClear} handleChange={this.handleChange}/>\n        <br></br>\n        <Filter filterChange={this.filterChange}/>\n        <YourBotArmy bots={this.filterOwnedBots()} addBot={this.clickBot}/>\n        <br></br>\n        {this.state.selectBot ? <BotSpecs bot={this.state.selectBot} clearSpec={this.clearSpec} addBot={this.addBot} />: \n          <BotsCollection bots={this.filterFreeBots()} addBot={this.clickBot}/>}\n      </div>\n    );\n  }\n\n}\n\nexport default BotsPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}